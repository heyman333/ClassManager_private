! function(t, e, i, n) {
    "use strict";

    function o(t, e) {
        return t === n ? e : t
    }

    function r(t, e) {
        for (var i = void 0, o = void 0, r = e[0].toUpperCase() + e.slice(1), s = 0; s < U.length;) {
            if (i = U[s], o = i ? i + r : e, o in t) return o;
            s++
        }
        return n
    }

    function s() {
        if (!et) return !1;
        var e = {},
            i = t.CSS && t.CSS.supports;
        return ["auto", "manipulation", "pan-y", "pan-x", "pan-x pan-y", "none"].forEach(function(n) {
            return e[n] = !i || t.CSS.supports("touch-action", n)
        }), e
    }

    function a() {
        return Zt++
    }

    function c(t, e, i) {
        var o = void 0;
        if (t)
            if (t.forEach) t.forEach(e, i);
            else if (t.length !== n)
            for (o = 0; o < t.length;) e.call(i, t[o], o, t), o++;
        else
            for (o in t) t.hasOwnProperty(o) && e.call(i, t[o], o, t)
    }

    function u(t, e, i) {
        return !!Array.isArray(t) && (c(t, i[e], i), !0)
    }

    function h(t, e, i) {
        if (t.indexOf && !i) return t.indexOf(e);
        for (var n = 0; n < t.length;) {
            if (i && t[n][i] == e || !i && t[n] === e) return n;
            n++
        }
        return -1
    }

    function l(t, e) {
        return ("undefined" == typeof t ? "undefined" : qt(t)) === G ? t.apply(e ? e[0] || n : n, e) : t
    }

    function p(t, e) {
        var i = e.manager;
        return i ? i.get(t) : t
    }

    function f(t) {
        return t & Nt ? "cancel" : t & jt ? "end" : t & Ft ? "move" : t & It ? "start" : ""
    }

    function d(t) {
        return t === Ot ? "down" : t === kt ? "up" : t === xt ? "left" : t === _t ? "right" : ""
    }

    function v(t, e) {
        return function() {
            return t.apply(e, arguments)
        }
    }

    function m(t, e, i) {
        return setTimeout(v(t, i), e)
    }

    function y(t, e, i) {
        i || (i = Ct);
        var n = e[i[0]] - t[i[0]],
            o = e[i[1]] - t[i[1]];
        return Math.sqrt(n * n + o * o)
    }

    function g(t, e) {
        return t.indexOf(e) > -1
    }

    function b(t) {
        if (g(t, rt)) return rt;
        var e = g(t, st),
            i = g(t, at);
        return e && i ? rt : e || i ? e ? st : at : g(t, ot) ? ot : nt
    }

    function T(t, e) {
        for (; t;) {
            if (t === e) return !0;
            t = t.parentNode
        }
        return !1
    }

    function w(t) {
        var e = t.length;
        if (1 === e) return {
            x: J(t[0].clientX),
            y: J(t[0].clientY)
        };
        for (var i = 0, n = 0, o = 0; o < e;) i += t[o].clientX, n += t[o].clientY, o++;
        return {
            x: J(i / e),
            y: J(n / e)
        }
    }

    function E(t) {
        for (var e = [], i = 0; i < t.pointers.length;) e[i] = {
            clientX: J(t.pointers[i].clientX),
            clientY: J(t.pointers[i].clientY)
        }, i++;
        return {
            timeStamp: K(),
            pointers: e,
            center: w(e),
            deltaX: t.deltaX,
            deltaY: t.deltaY
        }
    }

    function x(t, e, i) {
        i || (i = Ct);
        var n = e[i[0]] - t[i[0]],
            o = e[i[1]] - t[i[1]];
        return 180 * Math.atan2(o, n) / Math.PI
    }

    function _(t, e) {
        return t === e ? Et : Q(t) >= Q(e) ? t < 0 ? xt : _t : e < 0 ? kt : Ot
    }

    function k(t, e) {
        var i = e.center,
            n = t.offsetDelta || {},
            o = t.prevDelta || {},
            r = t.prevInput || {};
        e.eventType !== gt && r.eventType !== Tt || (o = t.prevDelta = {
            x: r.deltaX || 0,
            y: r.deltaY || 0
        }, n = t.offsetDelta = {
            x: i.x,
            y: i.y
        }), e.deltaX = o.x + (i.x - n.x), e.deltaY = o.y + (i.y - n.y)
    }

    function O(t, e, i) {
        return {
            x: e / t || 0,
            y: i / t || 0
        }
    }

    function S(t, e) {
        return y(e[0], e[1], Pt) / y(t[0], t[1], Pt)
    }

    function z(t, e) {
        return x(e[1], e[0], Pt) + x(t[1], t[0], Pt)
    }

    function A(t, e) {
        var i = t.lastInterval || e,
            o = e.timeStamp - i.timeStamp,
            r = void 0,
            s = void 0,
            a = void 0,
            c = void 0;
        if (e.eventType !== wt && (o > yt || i.velocity === n)) {
            var u = e.deltaX - i.deltaX,
                h = e.deltaY - i.deltaY,
                l = O(o, u, h);
            s = l.x, a = l.y, r = Q(l.x) > Q(l.y) ? l.x : l.y, c = _(u, h), t.lastInterval = e
        } else r = i.velocity, s = i.velocityX, a = i.velocityY, c = i.direction;
        e.velocity = r, e.velocityX = s, e.velocityY = a, e.direction = c
    }

    function C(t, e) {
        var i = t.session,
            n = e.pointers,
            o = n.length;
        i.firstInput || (i.firstInput = E(e)), o > 1 && !i.firstMultiple ? i.firstMultiple = E(e) : 1 === o && (i.firstMultiple = !1);
        var r = i.firstInput,
            s = i.firstMultiple,
            a = s ? s.center : r.center,
            c = e.center = w(n);
        e.timeStamp = K(), e.deltaTime = e.timeStamp - r.timeStamp, e.angle = x(a, c), e.distance = y(a, c), k(i, e), e.offsetDirection = _(e.deltaX, e.deltaY);
        var u = O(e.deltaTime, e.deltaX, e.deltaY);
        e.overallVelocityX = u.x, e.overallVelocityY = u.y, e.overallVelocity = Q(u.x) > Q(u.y) ? u.x : u.y, e.scale = s ? S(s.pointers, n) : 1, e.rotation = s ? z(s.pointers, n) : 0, e.maxPointers = i.prevInput ? e.pointers.length > i.prevInput.maxPointers ? e.pointers.length : i.prevInput.maxPointers : e.pointers.length, A(i, e);
        var h = t.element;
        T(e.srcEvent.target, h) && (h = e.srcEvent.target), e.target = h
    }

    function P(t, e, i) {
        var n = i.pointers.length,
            o = i.changedPointers.length,
            r = e & gt && n - o === 0,
            s = e & (Tt | wt) && n - o === 0;
        i.isFirst = !!r, i.isFinal = !!s, r && (t.session = {}), i.eventType = e, C(t, i), t.emit("hammer.input", i), t.recognize(i), t.session.prevInput = i
    }

    function D(t) {
        return t.trim().split(/\s+/g)
    }

    function I(t, e, i) {
        c(D(e), function(e) {
            t.addEventListener(e, i, !1)
        })
    }

    function F(t, e, i) {
        c(D(e), function(e) {
            t.removeEventListener(e, i, !1)
        })
    }

    function j(e) {
        var i = e.ownerDocument || e;
        return i.defaultView || i.parentWindow || t
    }

    function M(t) {
        return Array.prototype.slice.call(t, 0)
    }

    function N(t, e, i) {
        for (var n = [], o = [], r = 0; r < t.length;) {
            var s = e ? t[r][e] : t[r];
            h(o, s) < 0 && n.push(t[r]), o[r] = s, r++
        }
        return i && (n = e ? n.sort(function(t, i) {
            return t[e] > i[e]
        }) : n.sort()), n
    }

    function $(t, e) {
        var i = M(t.touches),
            n = this.targetIds;
        if (e & (gt | bt) && 1 === i.length) return n[i[0].identifier] = !0, [i, i];
        var o = void 0,
            r = void 0,
            s = M(t.changedTouches),
            a = [],
            c = this.target;
        if (r = i.filter(function(t) {
                return T(t.target, c)
            }), e === gt)
            for (o = 0; o < r.length;) n[r[o].identifier] = !0, o++;
        for (o = 0; o < s.length;) n[s[o].identifier] && a.push(s[o]), e & (Tt | wt) && delete n[s[o].identifier], o++;
        return a.length ? [N(r.concat(a), "identifier", !0), a] : void 0
    }

    function W(t, e) {
        t & gt ? (this.primaryTouch = e.changedPointers[0].identifier, R.call(this, e)) : t & (Tt | wt) && R.call(this, e)
    }

    function R(t) {
        var e = this,
            i = Ut(t.changedPointers, 1),
            n = i[0];
        n.identifier === this.primaryTouch && ! function() {
            var t = {
                x: n.clientX,
                y: n.clientY
            };
            e.lastTouches.push(t);
            var i = e.lastTouches,
                o = function() {
                    var e = i.indexOf(t);
                    e > -1 && i.splice(e, 1)
                };
            setTimeout(o, ye)
        }()
    }

    function Z(t) {
        for (var e = t.srcEvent.clientX, i = t.srcEvent.clientY, n = 0; n < this.lastTouches.length; n++) {
            var o = this.lastTouches[n],
                r = Math.abs(e - o.x),
                s = Math.abs(i - o.y);
            if (r <= ge && s <= ge) return !0
        }
        return !1
    }

    function q(t) {
        var e = void 0,
            i = t.options.inputClass;
        return new(e = i ? i : lt ? ue : pt ? pe : ht ? be : me)(t, P)
    }

    function Y(t, e) {
        var i = t.element;
        if (i.style) {
            var n = void 0;
            c(t.options.cssProps, function(o, s) {
                n = r(i.style, s), e ? (t.oldCssProps[n] = i.style[n], i.style[n] = o) : i.style[n] = t.oldCssProps[n] || ""
            }), e || (t.oldCssProps = {})
        }
    }

    function X(t, i) {
        var n = e.createEvent("Event");
        n.initEvent(t, !0, !0), n.gesture = i, i.target.dispatchEvent(n)
    }

    function H(t, e) {
        var i = M(t.touches),
            n = M(t.changedTouches);
        return e & (Tt | wt) && (i = N(i.concat(n), "identifier", !0)), [i, n]
    }

    function L(e, i, n) {
        var o = "DEPRECATED METHOD: " + i + "\n" + n + " AT \n";
        return function() {
            var i = new Error("get-stack-trace"),
                n = i && i.stack ? i.stack.replace(/^[^\(]+?[\n$]/gm, "").replace(/^\s+at\s+/gm, "").replace(/^Object.<anonymous>\s*\(/gm, "{anonymous}()@") : "Unknown Stack Trace",
                r = t.console && (t.console.warn || t.console.log);
            return r && r.call(t.console, o, n), e.apply(this, arguments)
        }
    }

    function B(t, e, i) {
        var n = e.prototype,
            o = void 0;
        o = t.prototype = Object.create(n), o.constructor = t, o._super = n, i && Rt(o, i)
    }
    var U = ["", "webkit", "Moz", "MS", "ms", "o"],
        V = e.createElement("div"),
        G = "function",
        J = Math.round,
        Q = Math.abs,
        K = Date.now,
        tt = r(V.style, "touchAction"),
        et = tt !== n,
        it = "compute",
        nt = "auto",
        ot = "manipulation",
        rt = "none",
        st = "pan-x",
        at = "pan-y",
        ct = s(),
        ut = /mobile|tablet|ip(ad|hone|od)|android/i,
        ht = "ontouchstart" in t,
        lt = r(t, "PointerEvent") !== n,
        pt = ht && ut.test(navigator.userAgent),
        ft = "touch",
        dt = "pen",
        vt = "mouse",
        mt = "kinect",
        yt = 25,
        gt = 1,
        bt = 2,
        Tt = 4,
        wt = 8,
        Et = 1,
        xt = 2,
        _t = 4,
        kt = 8,
        Ot = 16,
        St = xt | _t,
        zt = kt | Ot,
        At = St | zt,
        Ct = ["x", "y"],
        Pt = ["clientX", "clientY"],
        Dt = 1,
        It = 2,
        Ft = 4,
        jt = 8,
        Mt = jt,
        Nt = 16,
        $t = 32,
        Wt = void 0;
    Wt = "function" != typeof Object.assign ? function(t) {
        if (t === n || null === t) throw new TypeError("Cannot convert undefined or null to object");
        for (var e = Object(t), i = 1; i < arguments.length; i++) {
            var o = arguments[i];
            if (o !== n && null !== o)
                for (var r in o) o.hasOwnProperty(r) && (e[r] = o[r])
        }
        return e
    } : Object.assign;
    var Rt = Wt,
        Zt = 1,
        qt = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t) {
            return typeof t
        } : function(t) {
            return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t
        },
        Yt = (function() {
            function t(t) {
                this.value = t
            }

            function e(e) {
                function i(t, e) {
                    return new Promise(function(i, n) {
                        var r = {
                            key: t,
                            arg: e,
                            resolve: i,
                            reject: n,
                            next: null
                        };
                        a ? a = a.next = r : (s = a = r, o(t, e))
                    })
                }

                function o(i, n) {
                    try {
                        var s = e[i](n),
                            a = s.value;
                        a instanceof t ? Promise.resolve(a.value).then(function(t) {
                            o("next", t)
                        }, function(t) {
                            o("throw", t)
                        }) : r(s.done ? "return" : "normal", s.value)
                    } catch (t) {
                        r("throw", t)
                    }
                }

                function r(t, e) {
                    switch (t) {
                        case "return":
                            s.resolve({
                                value: e,
                                done: !0
                            });
                            break;
                        case "throw":
                            s.reject(e);
                            break;
                        default:
                            s.resolve({
                                value: e,
                                done: !1
                            })
                    }
                    s = s.next, s ? o(s.key, s.arg) : a = null
                }
                var s, a;
                this._invoke = i, "function" != typeof e.return && (this.return = n)
            }
            return "function" == typeof Symbol && Symbol.asyncIterator && (e.prototype[Symbol.asyncIterator] = function() {
                return this
            }), e.prototype.next = function(t) {
                return this._invoke("next", t)
            }, e.prototype.throw = function(t) {
                return this._invoke("throw", t)
            }, e.prototype.return = function(t) {
                return this._invoke("return", t)
            }, {
                wrap: function(t) {
                    return function() {
                        return new e(t.apply(this, arguments))
                    }
                },
                await: function(e) {
                    return new t(e)
                }
            }
        }(), function(t, e) {
            if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function")
        }),
        Xt = function() {
            function t(t, e) {
                for (var i = 0; i < e.length; i++) {
                    var n = e[i];
                    n.enumerable = n.enumerable || !1, n.configurable = !0, "value" in n && (n.writable = !0), Object.defineProperty(t, n.key, n)
                }
            }
            return function(e, i, n) {
                return i && t(e.prototype, i), n && t(e, n), e
            }
        }(),
        Ht = function t(e, i, o) {
            null === e && (e = Function.prototype);
            var r = Object.getOwnPropertyDescriptor(e, i);
            if (r === n) {
                var s = Object.getPrototypeOf(e);
                return null === s ? n : t(s, i, o)
            }
            if ("value" in r) return r.value;
            var a = r.get;
            return a === n ? n : a.call(o)
        },
        Lt = function(t, e) {
            if ("function" != typeof e && null !== e) throw new TypeError("Super expression must either be null or a function, not " + typeof e);
            t.prototype = Object.create(e && e.prototype, {
                constructor: {
                    value: t,
                    enumerable: !1,
                    writable: !0,
                    configurable: !0
                }
            }), e && (Object.setPrototypeOf ? Object.setPrototypeOf(t, e) : t.__proto__ = e)
        },
        Bt = function(t, e) {
            if (!t) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
            return !e || "object" != typeof e && "function" != typeof e ? t : e
        },
        Ut = function() {
            function t(t, e) {
                var i = [],
                    o = !0,
                    r = !1,
                    s = n;
                try {
                    for (var a, c = t[Symbol.iterator](); !(o = (a = c.next()).done) && (i.push(a.value), !e || i.length !== e); o = !0);
                } catch (t) {
                    r = !0, s = t
                } finally {
                    try {
                        !o && c.return && c.return()
                    } finally {
                        if (r) throw s
                    }
                }
                return i
            }
            return function(e, i) {
                if (Array.isArray(e)) return e;
                if (Symbol.iterator in Object(e)) return t(e, i);
                throw new TypeError("Invalid attempt to destructure non-iterable instance")
            }
        }(),
        Vt = function() {
            function t(e) {
                Yt(this, t), this.options = Rt({}, this.defaults, e || {}), this.id = a(), this.manager = null, this.options.enable = o(this.options.enable, !0), this.state = Dt, this.simultaneous = {}, this.requireFail = []
            }
            return Xt(t, [{
                key: "set",
                value: function(t) {
                    return Rt(this.options, t), this.manager && this.manager.touchAction.update(), this
                }
            }, {
                key: "recognizeWith",
                value: function(t) {
                    if (u(t, "recognizeWith", this)) return this;
                    var e = this.simultaneous;
                    return t = p(t, this), e[t.id] || (e[t.id] = t, t.recognizeWith(this)), this
                }
            }, {
                key: "dropRecognizeWith",
                value: function(t) {
                    return u(t, "dropRecognizeWith", this) ? this : (t = p(t, this), delete this.simultaneous[t.id], this)
                }
            }, {
                key: "requireFailure",
                value: function(t) {
                    if (u(t, "requireFailure", this)) return this;
                    var e = this.requireFail;
                    return t = p(t, this), h(e, t) === -1 && (e.push(t), t.requireFailure(this)), this
                }
            }, {
                key: "dropRequireFailure",
                value: function(t) {
                    if (u(t, "dropRequireFailure", this)) return this;
                    t = p(t, this);
                    var e = h(this.requireFail, t);
                    return e > -1 && this.requireFail.splice(e, 1), this
                }
            }, {
                key: "hasRequireFailures",
                value: function() {
                    return this.requireFail.length > 0
                }
            }, {
                key: "canRecognizeWith",
                value: function(t) {
                    return !!this.simultaneous[t.id]
                }
            }, {
                key: "emit",
                value: function t(e) {
                    function t(t) {
                        i.manager.emit(t, e)
                    }
                    var i = this,
                        n = this.state;
                    n < jt && t(i.options.event + f(n)), t(i.options.event), e.additionalEvent && t(e.additionalEvent), n >= jt && t(i.options.event + f(n))
                }
            }, {
                key: "tryEmit",
                value: function(t) {
                    return this.canEmit() ? this.emit(t) : void(this.state = $t)
                }
            }, {
                key: "canEmit",
                value: function() {
                    for (var t = 0; t < this.requireFail.length;) {
                        if (!(this.requireFail[t].state & ($t | Dt))) return !1;
                        t++
                    }
                    return !0
                }
            }, {
                key: "recognize",
                value: function(t) {
                    var e = Rt({}, t);
                    return l(this.options.enable, [this, e]) ? (this.state & (Mt | Nt | $t) && (this.state = Dt), this.state = this.process(e), void(this.state & (It | Ft | jt | Nt) && this.tryEmit(e))) : (this.reset(), void(this.state = $t))
                }
            }, {
                key: "process",
                value: function(t) {}
            }, {
                key: "getTouchAction",
                value: function() {}
            }, {
                key: "reset",
                value: function() {}
            }]), t
        }();
    Vt.prototype.defaults = {};
    var Gt = function(t) {
        function e() {
            return Yt(this, e), Bt(this, (e.__proto__ || Object.getPrototypeOf(e)).apply(this, arguments))
        }
        return Lt(e, t), Xt(e, [{
            key: "attrTest",
            value: function(t) {
                var e = this.options.pointers;
                return 0 === e || t.pointers.length === e
            }
        }, {
            key: "process",
            value: function(t) {
                var e = this.state,
                    i = t.eventType,
                    n = e & (It | Ft),
                    o = this.attrTest(t);
                return n && (i & wt || !o) ? e | Nt : n || o ? i & Tt ? e | jt : e & It ? e | Ft : It : $t
            }
        }]), e
    }(Vt);
    Gt.prototype.defaults = {
        pointers: 1
    };
    var Jt = function(t) {
        function e() {
            return Yt(this, e), Bt(this, (e.__proto__ || Object.getPrototypeOf(e)).apply(this, arguments))
        }
        return Lt(e, t), Xt(e, [{
            key: "getTouchAction",
            value: function() {
                return [rt]
            }
        }, {
            key: "attrTest",
            value: function(t) {
                return Ht(e.prototype.__proto__ || Object.getPrototypeOf(e.prototype), "attrTest", this).call(this, t) && (Math.abs(t.rotation) > this.options.threshold || this.state & It)
            }
        }]), e
    }(Gt);
    Jt.prototype.defaults = {
        event: "rotate",
        threshold: 0,
        pointers: 2
    };
    var Qt = function(t) {
        function e() {
            return Yt(this, e), Bt(this, (e.__proto__ || Object.getPrototypeOf(e)).apply(this, arguments))
        }
        return Lt(e, t), Xt(e, [{
            key: "getTouchAction",
            value: function() {
                return [rt]
            }
        }, {
            key: "attrTest",
            value: function(t) {
                return Ht(e.prototype.__proto__ || Object.getPrototypeOf(e.prototype), "attrTest", this).call(this, t) && (Math.abs(t.scale - 1) > this.options.threshold || this.state & It)
            }
        }, {
            key: "emit",
            value: function(t) {
                if (1 !== t.scale) {
                    var i = t.scale < 1 ? "in" : "out";
                    t.additionalEvent = this.options.event + i
                }
                Ht(e.prototype.__proto__ || Object.getPrototypeOf(e.prototype), "emit", this).call(this, t)
            }
        }]), e
    }(Gt);
    Qt.prototype.defaults = {
        event: "pinch",
        threshold: 0,
        pointers: 2
    };
    var Kt = function(t) {
        function e() {
            Yt(this, e);
            var t = Bt(this, (e.__proto__ || Object.getPrototypeOf(e)).apply(this, arguments));
            return t.pX = null, t.pY = null, t
        }
        return Lt(e, t), Xt(e, [{
            key: "getTouchAction",
            value: function() {
                var t = this.options.direction,
                    e = [];
                return t & St && e.push(at), t & zt && e.push(st), e
            }
        }, {
            key: "directionTest",
            value: function(t) {
                var e = this.options,
                    i = !0,
                    n = t.distance,
                    o = t.direction,
                    r = t.deltaX,
                    s = t.deltaY;
                return o & e.direction || (e.direction & St ? (o = 0 === r ? Et : r < 0 ? xt : _t, i = r !== this.pX, n = Math.abs(t.deltaX)) : (o = 0 === s ? Et : s < 0 ? kt : Ot, i = s !== this.pY, n = Math.abs(t.deltaY))), t.direction = o, i && n > e.threshold && o & e.direction
            }
        }, {
            key: "attrTest",
            value: function(t) {
                return Gt.prototype.attrTest.call(this, t) && (this.state & It || !(this.state & It) && this.directionTest(t))
            }
        }, {
            key: "emit",
            value: function(t) {
                this.pX = t.deltaX, this.pY = t.deltaY;
                var i = d(t.direction);
                i && (t.additionalEvent = this.options.event + i), Ht(e.prototype.__proto__ || Object.getPrototypeOf(e.prototype), "emit", this).call(this, t)
            }
        }]), e
    }(Gt);
    Kt.prototype.defaults = {
        event: "pan",
        threshold: 10,
        pointers: 1,
        direction: At
    };
    var te = function(t) {
        function e() {
            return Yt(this, e), Bt(this, (e.__proto__ || Object.getPrototypeOf(e)).apply(this, arguments))
        }
        return Lt(e, t), Xt(e, [{
            key: "getTouchAction",
            value: function() {
                return Kt.prototype.getTouchAction.call(this)
            }
        }, {
            key: "attrTest",
            value: function(t) {
                var i = this.options.direction,
                    n = void 0;
                return i & (St | zt) ? n = t.overallVelocity : i & St ? n = t.overallVelocityX : i & zt && (n = t.overallVelocityY), Ht(e.prototype.__proto__ || Object.getPrototypeOf(e.prototype), "attrTest", this).call(this, t) && i & t.offsetDirection && t.distance > this.options.threshold && t.maxPointers === this.options.pointers && Q(n) > this.options.velocity && t.eventType & Tt
            }
        }, {
            key: "emit",
            value: function(t) {
                var e = d(t.offsetDirection);
                e && this.manager.emit(this.options.event + e, t), this.manager.emit(this.options.event, t)
            }
        }]), e
    }(Gt);
    te.prototype.defaults = {
        event: "swipe",
        threshold: 10,
        velocity: .3,
        direction: St | zt,
        pointers: 1
    };
    var ee = function(t) {
        function e() {
            Yt(this, e);
            var t = Bt(this, (e.__proto__ || Object.getPrototypeOf(e)).apply(this, arguments));
            return t.pTime = !1, t.pCenter = !1, t._timer = null, t._input = null, t.count = 0, t
        }
        return Lt(e, t), Xt(e, [{
            key: "getTouchAction",
            value: function() {
                return [ot]
            }
        }, {
            key: "process",
            value: function(t) {
                var e = this,
                    i = this.options,
                    n = t.pointers.length === i.pointers,
                    o = t.distance < i.threshold,
                    r = t.deltaTime < i.time;
                if (this.reset(), t.eventType & gt && 0 === this.count) return this.failTimeout();
                if (o && r && n) {
                    if (t.eventType !== Tt) return this.failTimeout();
                    var s = !this.pTime || t.timeStamp - this.pTime < i.interval,
                        a = !this.pCenter || y(this.pCenter, t.center) < i.posThreshold;
                    this.pTime = t.timeStamp, this.pCenter = t.center, a && s ? this.count += 1 : this.count = 1, this._input = t;
                    var c = this.count % i.taps;
                    if (0 === c) return this.hasRequireFailures() ? (this._timer = m(function() {
                        e.state = Mt, e.tryEmit()
                    }, i.interval, this), It) : Mt
                }
                return $t
            }
        }, {
            key: "failTimeout",
            value: function() {
                var t = this;
                return this._timer = m(function() {
                    t.state = $t
                }, this.options.interval, this), $t
            }
        }, {
            key: "reset",
            value: function() {
                clearTimeout(this._timer)
            }
        }, {
            key: "emit",
            value: function() {
                this.state === Mt && (this._input.tapCount = this.count, this.manager.emit(this.options.event, this._input))
            }
        }]), e
    }(Vt);
    ee.prototype.defaults = {
        event: "tap",
        pointers: 1,
        taps: 1,
        interval: 300,
        time: 250,
        threshold: 9,
        posThreshold: 10
    };
    var ie = function(t) {
        function e() {
            Yt(this, e);
            var t = Bt(this, (e.__proto__ || Object.getPrototypeOf(e)).apply(this, arguments));
            return t._timer = null, t._input = null, t
        }
        return Lt(e, t), Xt(e, [{
            key: "getTouchAction",
            value: function() {
                return [nt]
            }
        }, {
            key: "process",
            value: function(t) {
                var e = this,
                    i = this.options,
                    n = t.pointers.length === i.pointers,
                    o = t.distance < i.threshold,
                    r = t.deltaTime > i.time;
                if (this._input = t, !o || !n || t.eventType & (Tt | wt) && !r) this.reset();
                else if (t.eventType & gt) this.reset(), this._timer = m(function() {
                    e.state = Mt, e.tryEmit()
                }, i.time, this);
                else if (t.eventType & Tt) return Mt;
                return $t
            }
        }, {
            key: "reset",
            value: function() {
                clearTimeout(this._timer)
            }
        }, {
            key: "emit",
            value: function(t) {
                this.state === Mt && (t && t.eventType & Tt ? this.manager.emit(this.options.event + "up", t) : (this._input.timeStamp = K(), this.manager.emit(this.options.event, this._input)))
            }
        }]), e
    }(Vt);
    ie.prototype.defaults = {
        event: "press",
        pointers: 1,
        time: 251,
        threshold: 9
    };
    var ne = function() {
            function t(e, i) {
                Yt(this, t), this.manager = e, this.set(i)
            }
            return Xt(t, [{
                key: "set",
                value: function(t) {
                    t === it && (t = this.compute()), et && this.manager.element.style && ct[t] && (this.manager.element.style[tt] = t), this.actions = t.toLowerCase().trim()
                }
            }, {
                key: "update",
                value: function() {
                    this.set(this.manager.options.touchAction)
                }
            }, {
                key: "compute",
                value: function() {
                    var t = [];
                    return c(this.manager.recognizers, function(e) {
                        l(e.options.enable, [e]) && (t = t.concat(e.getTouchAction()))
                    }), b(t.join(" "))
                }
            }, {
                key: "preventDefaults",
                value: function(t) {
                    var e = t.srcEvent,
                        i = t.offsetDirection;
                    if (this.manager.session.prevented) return void e.preventDefault();
                    var n = this.actions,
                        o = g(n, rt) && !ct[rt],
                        r = g(n, at) && !ct[at],
                        s = g(n, st) && !ct[st];
                    if (o) {
                        var a = 1 === t.pointers.length,
                            c = t.distance < 2,
                            u = t.deltaTime < 250;
                        if (a && c && u) return
                    }
                    return s && r ? void 0 : o || r && i & St || s && i & zt ? this.preventSrc(e) : void 0
                }
            }, {
                key: "preventSrc",
                value: function(t) {
                    this.manager.session.prevented = !0, t.preventDefault()
                }
            }]), t
        }(),
        oe = function() {
            function t(e, i) {
                Yt(this, t);
                var n = this;
                this.manager = e, this.callback = i, this.element = e.element, this.target = e.options.inputTarget, this.domHandler = function(t) {
                    l(e.options.enable, [e]) && n.handler(t)
                }, this.init()
            }
            return Xt(t, [{
                key: "handler",
                value: function() {}
            }, {
                key: "init",
                value: function() {
                    this.evEl && I(this.element, this.evEl, this.domHandler), this.evTarget && I(this.target, this.evTarget, this.domHandler), this.evWin && I(j(this.element), this.evWin, this.domHandler)
                }
            }, {
                key: "destroy",
                value: function() {
                    this.evEl && F(this.element, this.evEl, this.domHandler), this.evTarget && F(this.target, this.evTarget, this.domHandler), this.evWin && F(j(this.element), this.evWin, this.domHandler)
                }
            }]), t
        }(),
        re = {
            pointerdown: gt,
            pointermove: bt,
            pointerup: Tt,
            pointercancel: wt,
            pointerout: wt
        },
        se = {
            2: ft,
            3: dt,
            4: vt,
            5: mt
        },
        ae = "pointerdown",
        ce = "pointermove pointerup pointercancel";
    t.MSPointerEvent && !t.PointerEvent && (ae = "MSPointerDown", ce = "MSPointerMove MSPointerUp MSPointerCancel");
    var ue = function(t) {
            function e() {
                Yt(this, e);
                var t = Bt(this, (e.__proto__ || Object.getPrototypeOf(e)).apply(this, arguments));
                return t.evEl = ae, t.evWin = ce, t.store = t.manager.session.pointerEvents = [], t
            }
            return Lt(e, t), Xt(e, [{
                key: "handler",
                value: function(t) {
                    var e = this.store,
                        i = !1,
                        n = t.type.toLowerCase().replace("ms", ""),
                        o = re[n],
                        r = se[t.pointerType] || t.pointerType,
                        s = r === ft,
                        a = h(e, t.pointerId, "pointerId");
                    o & gt && (0 === t.button || s) ? a < 0 && (e.push(t), a = e.length - 1) : o & (Tt | wt) && (i = !0), a < 0 || (e[a] = t, this.callback(this.manager, o, {
                        pointers: e,
                        changedPointers: [t],
                        pointerType: r,
                        srcEvent: t
                    }), i && e.splice(a, 1))
                }
            }]), e
        }(oe),
        he = {
            touchstart: gt,
            touchmove: bt,
            touchend: Tt,
            touchcancel: wt
        },
        le = "touchstart touchmove touchend touchcancel",
        pe = function(t) {
            function e() {
                Yt(this, e), e.prototype.evTarget = le, e.prototype.targetIds = {};
                var t = Bt(this, (e.__proto__ || Object.getPrototypeOf(e)).apply(this, arguments));
                return t.evTarget = le, t.targetIds = {}, t
            }
            return Lt(e, t), Xt(e, [{
                key: "handler",
                value: function(t) {
                    var e = he[t.type],
                        i = $.call(this, t, e);
                    i && this.callback(this.manager, e, {
                        pointers: i[0],
                        changedPointers: i[1],
                        pointerType: ft,
                        srcEvent: t
                    })
                }
            }]), e
        }(oe),
        fe = {
            mousedown: gt,
            mousemove: bt,
            mouseup: Tt
        },
        de = "mousedown",
        ve = "mousemove mouseup",
        me = function(t) {
            function e() {
                Yt(this, e);
                var t = Bt(this, (e.__proto__ || Object.getPrototypeOf(e)).apply(this, arguments));
                return t.evEl = de, t.evWin = ve, t.pressed = !1, t
            }
            return Lt(e, t), Xt(e, [{
                key: "handler",
                value: function(t) {
                    var e = fe[t.type];
                    e & gt && 0 === t.button && (this.pressed = !0), e & bt && 1 !== t.which && (e = Tt), this.pressed && (e & Tt && (this.pressed = !1), this.callback(this.manager, e, {
                        pointers: [t],
                        changedPointers: [t],
                        pointerType: vt,
                        srcEvent: t
                    }))
                }
            }]), e
        }(oe),
        ye = 2500,
        ge = 25,
        be = function(t) {
            function e() {
                Yt(this, e);
                var t = Bt(this, (e.__proto__ || Object.getPrototypeOf(e)).apply(this, arguments)),
                    i = v(t.handler, t);
                return t.touch = new pe(t.manager, i), t.mouse = new me(t.manager, i), t.primaryTouch = null, t.lastTouches = [], t
            }
            return Lt(e, t), Xt(e, [{
                key: "handler",
                value: function(t, e, i) {
                    var n = i.pointerType === ft,
                        o = i.pointerType === vt;
                    if (!(o && i.sourceCapabilities && i.sourceCapabilities.firesTouchEvents)) {
                        if (n) W.call(this, e, i);
                        else if (o && Z.call(this, i)) return;
                        this.callback(t, e, i)
                    }
                }
            }, {
                key: "destroy",
                value: function() {
                    this.touch.destroy(), this.mouse.destroy()
                }
            }]), e
        }(oe),
        Te = 1,
        we = 2,
        Ee = function() {
            function t(e, i) {
                var n = this;
                Yt(this, t), this.options = Rt({}, xe.defaults, i || {}), this.options.inputTarget = this.options.inputTarget || e, this.handlers = {}, this.session = {}, this.recognizers = [], this.oldCssProps = {}, this.element = e, this.input = q(this), this.touchAction = new ne(this, this.options.touchAction), Y(this, !0), c(this.options.recognizers, function(t) {
                    var e = n.add(new t[0](t[1]));
                    t[2] && e.recognizeWith(t[2]), t[3] && e.requireFailure(t[3])
                }, this)
            }
            return Xt(t, [{
                key: "set",
                value: function(t) {
                    return Rt(this.options, t), t.touchAction && this.touchAction.update(), t.inputTarget && (this.input.destroy(), this.input.target = t.inputTarget, this.input.init()), this
                }
            }, {
                key: "stop",
                value: function(t) {
                    this.session.stopped = t ? we : Te
                }
            }, {
                key: "recognize",
                value: function(t) {
                    var e = this.session;
                    if (!e.stopped) {
                        this.touchAction.preventDefaults(t);
                        var i = void 0,
                            n = this.recognizers,
                            o = e.curRecognizer;
                        (!o || o && o.state & Mt) && (o = e.curRecognizer = null);
                        for (var r = 0; r < n.length;) i = n[r], e.stopped === we || o && i !== o && !i.canRecognizeWith(o) ? i.reset() : i.recognize(t), !o && i.state & (It | Ft | jt) && (o = e.curRecognizer = i), r++
                    }
                }
            }, {
                key: "get",
                value: function(t) {
                    if (t instanceof Vt) return t;
                    for (var e = this.recognizers, i = 0; i < e.length; i++)
                        if (e[i].options.event === t) return e[i];
                    return null
                }
            }, {
                key: "add",
                value: function(t) {
                    if (u(t, "add", this)) return this;
                    var e = this.get(t.options.event);
                    return e && this.remove(e), this.recognizers.push(t), t.manager = this, this.touchAction.update(), t
                }
            }, {
                key: "remove",
                value: function(t) {
                    if (u(t, "remove", this)) return this;
                    if (t = this.get(t)) {
                        var e = this.recognizers,
                            i = h(e, t);
                        i !== -1 && (e.splice(i, 1), this.touchAction.update())
                    }
                    return this
                }
            }, {
                key: "on",
                value: function(t, e) {
                    if (t !== n && e !== n) {
                        var i = this.handlers;
                        return c(D(t), function(t) {
                            i[t] = i[t] || [], i[t].push(e)
                        }), this
                    }
                }
            }, {
                key: "off",
                value: function(t, e) {
                    if (t !== n) {
                        var i = this.handlers;
                        return c(D(t), function(t) {
                            e ? i[t] && i[t].splice(h(i[t], e), 1) : delete i[t]
                        }), this
                    }
                }
            }, {
                key: "emit",
                value: function(t, e) {
                    this.options.domEvents && X(t, e);
                    var i = this.handlers[t] && this.handlers[t].slice();
                    if (i && i.length) {
                        e.type = t, e.preventDefault = function() {
                            e.srcEvent.preventDefault()
                        };
                        for (var n = 0; n < i.length;) i[n](e), n++
                    }
                }
            }, {
                key: "destroy",
                value: function() {
                    this.element && Y(this, !1), this.handlers = {}, this.session = {}, this.input.destroy(), this.element = null
                }
            }]), t
        }(),
        xe = function t(e, i) {
            return Yt(this, t), i = i || {}, i.recognizers = o(i.recognizers, t.defaults.preset), new Ee(e, i)
        };
    xe.VERSION = "2.0.8", xe.defaults = {
        domEvents: !1,
        touchAction: it,
        enable: !0,
        inputTarget: null,
        inputClass: null,
        preset: [
            [Jt, {
                enable: !1
            }],
            [Qt, {
                    enable: !1
                },
                ["rotate"]
            ],
            [te, {
                direction: St
            }],
            [Kt, {
                    direction: St
                },
                ["swipe"]
            ],
            [ee],
            [ee, {
                    event: "doubletap",
                    taps: 2
                },
                ["tap"]
            ],
            [ie]
        ],
        cssProps: {
            userSelect: "none",
            touchSelect: "none",
            touchCallout: "none",
            contentZooming: "none",
            userDrag: "none",
            tapHighlightColor: "rgba(0,0,0,0)"
        }
    };
    var _e = {
            touchstart: gt,
            touchmove: bt,
            touchend: Tt,
            touchcancel: wt
        },
        ke = "touchstart",
        Oe = "touchstart touchmove touchend touchcancel",
        Se = function(t) {
            function e() {
                Yt(this, e);
                var t = Bt(this, (e.__proto__ || Object.getPrototypeOf(e)).apply(this, arguments));
                return t.evTarget = ke, t.evWin = Oe, t.started = !1, oe.apply(t, arguments), t
            }
            return Lt(e, t), Xt(e, [{
                key: "handler",
                value: function(t) {
                    var e = _e[t.type];
                    if (e === gt && (this.started = !0), this.started) {
                        var i = H.call(this, t, e);
                        e & (Tt | wt) && i[0].length - i[1].length === 0 && (this.started = !1), this.callback(this.manager, e, {
                            pointers: i[0],
                            changedPointers: i[1],
                            pointerType: ft,
                            srcEvent: t
                        })
                    }
                }
            }]), e
        }(oe),
        ze = L(function(t, e, i) {
            for (var o = Object.keys(e), r = 0; r < o.length;)(!i || i && t[o[r]] === n) && (t[o[r]] = e[o[r]]), r++;
            return t
        }, "extend", "Use `assign`."),
        Ae = L(function(t, e) {
            return ze(t, e, !0)
        }, "merge", "Use `assign`.");
    Rt(xe, {
        INPUT_START: gt,
        INPUT_MOVE: bt,
        INPUT_END: Tt,
        INPUT_CANCEL: wt,
        STATE_POSSIBLE: Dt,
        STATE_BEGAN: It,
        STATE_CHANGED: Ft,
        STATE_ENDED: jt,
        STATE_RECOGNIZED: Mt,
        STATE_CANCELLED: Nt,
        STATE_FAILED: $t,
        DIRECTION_NONE: Et,
        DIRECTION_LEFT: xt,
        DIRECTION_RIGHT: _t,
        DIRECTION_UP: kt,
        DIRECTION_DOWN: Ot,
        DIRECTION_HORIZONTAL: St,
        DIRECTION_VERTICAL: zt,
        DIRECTION_ALL: At,
        Manager: Ee,
        Input: oe,
        TouchAction: ne,
        TouchInput: pe,
        MouseInput: me,
        PointerEventInput: ue,
        TouchMouseInput: be,
        SingleTouchInput: Se,
        Recognizer: Vt,
        AttrRecognizer: Gt,
        Tap: ee,
        Pan: Kt,
        Swipe: te,
        Pinch: Qt,
        Rotate: Jt,
        Press: ie,
        on: I,
        off: F,
        each: c,
        merge: Ae,
        extend: ze,
        assign: Rt,
        inherit: B,
        bindFn: v,
        prefixed: r,
        toArray: M,
        inArray: h,
        uniqueArray: N,
        splitStr: D,
        boolOrFn: l,
        hasParent: T,
        addEventListeners: I,
        removeEventListeners: F
    }), "function" == typeof define && define.amd ? define(function() {
        return xe
    }) : "undefined" != typeof module && module.exports ? module.exports = xe : t[i] = xe
}(window, document, "Hammer"),
function(t) {
    "function" == typeof define && define.amd ? define(["jquery", "hammerjs"], t) : "object" == typeof exports ? t(require("jquery"), require("hammerjs")) : t(jQuery, Hammer)
}(function(t, e) {
    function i(i, n) {
        var o = t(i);
        o.data("hammer") || o.data("hammer", new e(o[0], n))
    }
    t.fn.hammer = function(t) {
        return this.each(function() {
            i(this, t)
        })
    }, e.Manager.prototype.emit = function(e) {
        return function(i, n) {
            e.call(this, i, n), t(this.element).trigger({
                type: i,
                gesture: n
            })
        }
    }(e.Manager.prototype.emit)
}),
function() {
    "use strict";
    var t = function(t) {
        var e = function(e, i) {
                this.el = t(e), this.zoomFactor = 1, this.lastScale = 1, this.offset = {
                    x: 0,
                    y: 0
                }, this.options = t.extend({}, this.defaults, i), this.setupMarkup(), this.bindEvents(), this.update(), this.enable()
            },
            i = function(t, e) {
                return t + e
            },
            n = function(t, e) {
                return t > e - .01 && t < e + .01
            };
        e.prototype = {
            defaults: {
                tapZoomFactor: 2,
                zoomOutFactor: 1.3,
                animationDuration: 300,
                maxZoom: 4,
                minZoom: .5,
                lockDragAxis: !1,
                use2d: !0,
                zoomStartEventName: "pz_zoomstart",
                zoomEndEventName: "pz_zoomend",
                dragStartEventName: "pz_dragstart",
                dragEndEventName: "pz_dragend",
                doubleTapEventName: "pz_doubletap"
            },
            handleDragStart: function(t) {
                this.el.trigger(this.options.dragStartEventName), this.stopAnimation(), this.lastDragPosition = !1, this.hasInteraction = !0, this.handleDrag(t)
            },
            handleDrag: function(t) {
                if (this.zoomFactor > 1) {
                    var e = this.getTouches(t)[0];
                    this.drag(e, this.lastDragPosition), this.offset = this.sanitizeOffset(this.offset), this.lastDragPosition = e
                }
            },
            handleDragEnd: function() {
                this.el.trigger(this.options.dragEndEventName), this.end()
            },
            handleZoomStart: function(t) {
                this.el.trigger(this.options.zoomStartEventName), this.stopAnimation(), this.lastScale = 1, this.nthZoom = 0, this.lastZoomCenter = !1, this.hasInteraction = !0
            },
            handleZoom: function(t, e) {
                var i = this.getTouchCenter(this.getTouches(t)),
                    n = e / this.lastScale;
                this.lastScale = e, this.nthZoom += 1, this.nthZoom > 3 && (this.scale(n, i), this.drag(i, this.lastZoomCenter)), this.lastZoomCenter = i
            },
            handleZoomEnd: function() {
                this.el.trigger(this.options.zoomEndEventName), this.end()
            },
            handleDoubleTap: function(t) {
                var e = this.getTouches(t)[0],
                    i = this.zoomFactor > 1 ? 1 : this.options.tapZoomFactor,
                    n = this.zoomFactor,
                    o = function(t) {
                        this.scaleTo(n + t * (i - n), e)
                    }.bind(this);
                this.hasInteraction || (n > i && (e = this.getCurrentZoomCenter()), this.animate(this.options.animationDuration, o, this.swing), this.el.trigger(this.options.doubleTapEventName))
            },
            sanitizeOffset: function(t) {
                var e = (this.zoomFactor - 1) * this.getContainerX(),
                    i = (this.zoomFactor - 1) * this.getContainerY(),
                    n = Math.max(e, 0),
                    o = Math.max(i, 0),
                    r = Math.min(e, 0),
                    s = Math.min(i, 0);
                return {
                    x: Math.min(Math.max(t.x, r), n),
                    y: Math.min(Math.max(t.y, s), o)
                }
            },
            scaleTo: function(t, e) {
                this.scale(t / this.zoomFactor, e)
            },
            scale: function(t, e) {
                t = this.scaleZoomFactor(t), this.addOffset({
                    x: (t - 1) * (e.x + this.offset.x),
                    y: (t - 1) * (e.y + this.offset.y)
                })
            },
            scaleZoomFactor: function(t) {
                var e = this.zoomFactor;
                return this.zoomFactor *= t, this.zoomFactor = Math.min(this.options.maxZoom, Math.max(this.zoomFactor, this.options.minZoom)), this.zoomFactor / e
            },
            drag: function(t, e) {
                e && (this.options.lockDragAxis ? Math.abs(t.x - e.x) > Math.abs(t.y - e.y) ? this.addOffset({
                    x: -(t.x - e.x),
                    y: 0
                }) : this.addOffset({
                    y: -(t.y - e.y),
                    x: 0
                }) : this.addOffset({
                    y: -(t.y - e.y),
                    x: -(t.x - e.x)
                }))
            },
            getTouchCenter: function(t) {
                return this.getVectorAvg(t)
            },
            getVectorAvg: function(t) {
                return {
                    x: t.map(function(t) {
                        return t.x
                    }).reduce(i) / t.length,
                    y: t.map(function(t) {
                        return t.y
                    }).reduce(i) / t.length
                }
            },
            addOffset: function(t) {
                this.offset = {
                    x: this.offset.x + t.x,
                    y: this.offset.y + t.y
                }
            },
            sanitize: function() {
                this.zoomFactor < this.options.zoomOutFactor ? this.zoomOutAnimation() : this.isInsaneOffset(this.offset) && this.sanitizeOffsetAnimation()
            },
            isInsaneOffset: function(t) {
                var e = this.sanitizeOffset(t);
                return e.x !== t.x || e.y !== t.y
            },
            sanitizeOffsetAnimation: function() {
                var t = this.sanitizeOffset(this.offset),
                    e = {
                        x: this.offset.x,
                        y: this.offset.y
                    },
                    i = function(i) {
                        this.offset.x = e.x + i * (t.x - e.x), this.offset.y = e.y + i * (t.y - e.y), this.update()
                    }.bind(this);
                this.animate(this.options.animationDuration, i, this.swing)
            },
            zoomOutAnimation: function() {
                var t = this.zoomFactor,
                    e = 1,
                    i = this.getCurrentZoomCenter(),
                    n = function(n) {
                        this.scaleTo(t + n * (e - t), i)
                    }.bind(this);
                this.animate(this.options.animationDuration, n, this.swing)
            },
            updateAspectRatio: function() {
                this.setContainerY(this.getContainerX() / this.getAspectRatio())
            },
            getInitialZoomFactor: function() {
                return this.container[0].offsetWidth / this.el[0].offsetWidth
            },
            getAspectRatio: function() {
                return this.el[0].offsetWidth / this.el[0].offsetHeight
            },
            getCurrentZoomCenter: function() {
                var t = this.container[0].offsetWidth * this.zoomFactor,
                    e = this.offset.x,
                    i = t - e - this.container[0].offsetWidth,
                    n = e / i,
                    o = n * this.container[0].offsetWidth / (n + 1),
                    r = this.container[0].offsetHeight * this.zoomFactor,
                    s = this.offset.y,
                    a = r - s - this.container[0].offsetHeight,
                    c = s / a,
                    u = c * this.container[0].offsetHeight / (c + 1);
                return 0 === i && (o = this.container[0].offsetWidth), 0 === a && (u = this.container[0].offsetHeight), {
                    x: o,
                    y: u
                }
            },
            canDrag: function() {
                return !n(this.zoomFactor, 1)
            },
            getTouches: function(t) {
                var e = this.container.offset();
                return Array.prototype.slice.call(t.touches).map(function(t) {
                    return {
                        x: t.pageX - e.left,
                        y: t.pageY - e.top
                    }
                })
            },
            animate: function(t, e, i, n) {
                var o = (new Date).getTime(),
                    r = function() {
                        if (this.inAnimation) {
                            var s = (new Date).getTime() - o,
                                a = s / t;
                            s >= t ? (e(1), n && n(), this.update(), this.stopAnimation(), this.update()) : (i && (a = i(a)), e(a), this.update(), requestAnimationFrame(r))
                        }
                    }.bind(this);
                this.inAnimation = !0, requestAnimationFrame(r)
            },
            stopAnimation: function() {
                this.inAnimation = !1
            },
            swing: function(t) {
                return -Math.cos(t * Math.PI) / 2 + .5
            },
            getContainerX: function() {
                return this.container[0].offsetWidth
            },
            getContainerY: function() {
                return this.container[0].offsetHeight
            },
            setContainerY: function(t) {
                return this.container.height(t)
            },
            setupMarkup: function() {
                this.container = t('<div class="pinch-zoom-container"></div>'), this.el.before(this.container), this.container.append(this.el), this.container.css({
                    overflow: "hidden",
                    position: "relative"
                }), this.el.css({
                    "-webkit-transform-origin": "0% 0%",
                    "-moz-transform-origin": "0% 0%",
                    "-ms-transform-origin": "0% 0%",
                    "-o-transform-origin": "0% 0%",
                    "transform-origin": "0% 0%",
                    position: "absolute"
                })
            },
            end: function() {
                this.hasInteraction = !1, this.sanitize(), this.update()
            },
            bindEvents: function() {
                o(this.container.get(0), this), t(window).on("resize", this.update.bind(this)), t(this.el).find("img").on("load", this.update.bind(this))
            },
            update: function() {
                this.updatePlaned || (this.updatePlaned = !0, setTimeout(function() {
                    this.updatePlaned = !1, this.updateAspectRatio();
                    var t = this.getInitialZoomFactor() * this.zoomFactor,
                        e = -this.offset.x / t,
                        i = -this.offset.y / t,
                        n = "scale3d(" + t + ", " + t + ",1) translate3d(" + e + "px," + i + "px,0px)",
                        o = "scale(" + t + ", " + t + ") translate(" + e + "px," + i + "px)",
                        r = function() {
                            this.clone && (this.clone.remove(), delete this.clone)
                        }.bind(this);
                    !this.options.use2d || this.hasInteraction || this.inAnimation ? (this.is3d = !0, r(), this.el.css({
                        "-webkit-transform": n,
                        "-o-transform": o,
                        "-ms-transform": o,
                        "-moz-transform": o,
                        transform: n
                    })) : (this.is3d && (this.clone = this.el.clone(), this.clone.css("pointer-events", "none"), this.clone.appendTo(this.container), setTimeout(r, 200)), this.el.css({
                        "-webkit-transform": o,
                        "-o-transform": o,
                        "-ms-transform": o,
                        "-moz-transform": o,
                        transform: o
                    }), this.is3d = !1)
                }.bind(this), 0))
            },
            enable: function() {
                this.enabled = !0
            },
            disable: function() {
                this.enabled = !1
            }
        };
        var o = function(t, e) {
            var i = null,
                n = 0,
                o = null,
                r = null,
                s = function(t, n) {
                    if (i !== t) {
                        if (i && !t) switch (i) {
                            case "zoom":
                                e.handleZoomEnd(n);
                                break;
                            case "drag":
                                e.handleDragEnd(n)
                        }
                        switch (t) {
                            case "zoom":
                                e.handleZoomStart(n);
                                break;
                            case "drag":
                                e.handleDragStart(n)
                        }
                    }
                    i = t
                },
                a = function(t) {
                    2 === n ? s("zoom") : 1 === n && e.canDrag() ? s("drag", t) : s(null, t)
                },
                c = function(t) {
                    return Array.prototype.slice.call(t).map(function(t) {
                        return {
                            x: t.pageX,
                            y: t.pageY
                        }
                    })
                },
                u = function(t, e) {
                    var i, n;
                    return i = t.x - e.x, n = t.y - e.y, Math.sqrt(i * i + n * n)
                },
                h = function(t, e) {
                    var i = u(t[0], t[1]),
                        n = u(e[0], e[1]);
                    return n / i
                },
                l = function(t) {
                    t.stopPropagation(), t.preventDefault()
                },
                p = function(t) {
                    var r = (new Date).getTime();
                    if (n > 1 && (o = null), r - o < 300) switch (l(t), e.handleDoubleTap(t), i) {
                        case "zoom":
                            e.handleZoomEnd(t);
                            break;
                        case "drag":
                            e.handleDragEnd(t)
                    }
                    1 === n && (o = r)
                },
                f = !0;
            t.addEventListener("touchstart", function(t) {
                e.enabled && (f = !0, n = t.touches.length, p(t))
            }), t.addEventListener("touchmove", function(t) {
                if (e.enabled) {
                    if (f) a(t), i && l(t), r = c(t.touches);
                    else {
                        switch (i) {
                            case "zoom":
                                e.handleZoom(t, h(r, c(t.touches)));
                                break;
                            case "drag":
                                e.handleDrag(t)
                        }
                        i && (l(t), e.update())
                    }
                    f = !1
                }
            }), t.addEventListener("touchend", function(t) {
                e.enabled && (n = t.touches.length, a(t))
            })
        };
        return e
    };
    "undefined" != typeof define && define.amd ? define(["jquery"], function(e) {
        return t(e)
    }) : window.PinchZoom = t(window.$)
}.call(this), ! function(t, e) {
    "use strict";
    "function" == typeof define && (define.amd || define.cmd) ? define(["jquery"], e) : e("undefined" != typeof jQuery ? jQuery : window.Zepto)
}(this, function(t) {
    "use strict";

    function e(e) {
        return this.each(function() {
            var n = t(this),
                o = n.data("preview"),
                r = t.extend({}, i.options(n.data("options")), "object" == typeof e && e);
            o || n.data("preview", o = new s(this, r)), "string" == typeof e && o[e]()
        })
    }
    var i = {
        options: function(e) {
            if (t.isPlainObject(e)) return e;
            var i = e ? e.indexOf("{") : -1,
                n = {};
            if (i != -1) try {
                n = new Function("", "var json = " + e.substr(i) + "; return JSON.parse(JSON.stringify(json));")()
            } catch (t) {}
            return n
        },
        transition: function() {
            var t = function() {
                var t, e = window.document.body || window.document.documentElement,
                    i = {
                        WebkitAnimation: "webkitAnimationEnd",
                        MozAnimation: "animationend",
                        OAnimation: "oAnimationEnd oanimationend",
                        animation: "animationend"
                    };
                for (t in i)
                    if (void 0 !== e.style[t]) return i[t]
            }();
            return t && {
                end: t
            }
        }(),
        animation: function() {
            var t = function() {
                var t, e = window.document.body || window.document.documentElement,
                    i = {
                        WebkitTransition: "webkitTransitionEnd",
                        MozTransition: "transitionend",
                        OTransition: "oTransitionEnd otransitionend",
                        transition: "transitionend"
                    };
                for (t in i)
                    if (void 0 !== e.style[t]) return i[t]
            }();
            return t && {
                end: t
            }
        }()
    };
    t.fn.emulateTransitionEnd = function(e) {
        var n = !1,
            o = this;
        t(this).one(i.transition.end, function() {
            n = !0
        });
        var r = function() {
            n || t(o).trigger(i.transition.end), o.transitionEndTimmer = void 0
        };
        return this.transitionEndTimmer = setTimeout(r, e), this
    }, t.fn.transitionEnd = function(t) {
        function e(i) {
            t.call(this, i), n && o.off(n, e)
        }
        var n = i.transition.end,
            o = this;
        return t && n && o.on(n, e), this
    };
    var n = function(t) {
            var e = t + "-" || "pi-";
            do e += Math.random().toString(36).substring(2, 7); while (document.getElementById(e));
            return e
        },
        o = function() {
            if (document.body.clientWidth >= window.innerWidth) return 0;
            var e = t('<div style="width: 100px;height: 100px;overflow: scroll;position: absolute;top: -9999px;"></div>');
            t(document.body).append(e);
            var i = e[0].offsetWidth - e[0].clientWidth;
            return e.remove(), i
        },
        r = function(t, e) {
            function i() {
                e(t[0])
            }

            function n() {
                if (this.one("load", i), /MSIE (\d+\.\d+);/.test(navigator.userAgent)) {
                    var t = this.attr("src"),
                        e = t.match(/\?/) ? "&" : "?";
                    e += "random=" + (new Date).getTime(), this.attr("src", t + e)
                }
            }
            return t.attr("src") ? void(t[0].complete || 4 === t[0].readyState ? i() : n.call(t)) : void i()
        },
        s = function(e, i) {
            this.$element = t(e), this.$body = t(document.body), this.options = t.extend({}, s.DEFAULTS, i), this.$preview = t(this.options.tpl, {
                id: n("pi-preview")
            }), this.$slides = null, this.transitioning = null, this.scrollbarWidth = 0, this.init()
        };
    return s.DEFAULTS = {
        tpl: '<div class="pi-preview pi-preview-bar-active"><ul class="pi-preview-slider"></ul><ul class="pi-preview-direction"><li class="pi-preview-prev"><a href=""></a></li><li class="pi-preview-next"><a href=""></a></li></ul><ol class="pi-preview-nav"></ol><div class="pi-preview-bar pi-active"><span class="pi-preview-title"></span><div><span class="pi-preview-current"></span>/<span class="pi-preview-total"></span></div></div><div class="pi-preview-actions pi-active"><a href="javascript:;" class="pi-back" data-pi-close="preview"></a></div></div>',
        className: {
            prevSlide: "pi-preview-slide-prev",
            nextSlide: "pi-preview-slide-next",
            onlyOne: "pi-preview-only",
            active: "pi-active",
            barActive: "pi-preview-bar-active",
            activeBody: "pi-preview-active"
        },
        selector: {
            slider: ".pi-preview-slider",
            close: '[data-pi-close="preview"]',
            total: ".pi-preview-total",
            current: ".pi-preview-current",
            title: ".pi-preview-title",
            direction: ".pi-preview-direction",
            actions: ".pi-preview-actions",
            bar: ".pi-preview-bar",
            pinchZoom: ".pi-pinch-zoom",
            nav: ".pi-preview-nav"
        },
        shareBtn: !0,
        showDirection: !1,
        target: "img",
        weChatImagePreview: !0
    }, s.prototype.init = function() {
        var e = this,
            i = this.options,
            n = this.$element,
            o = this.$preview,
            r = o.find(i.selector.slider),
            s = o.find(i.selector.nav),
            a = o.find(i.selector.direction),
            c = t([]),
            u = t([]),
            h = n.find(i.target),
            l = h.length,
            p = [];
        l && (1 === l && o.addClass(i.className.onlyOne), h.each(function(e, n) {
            var o, r;
            "a" == i.target ? (o = n.href, r = n.title || "") : (o = t(n).data("rel") || n.src, r = t(n).attr("alt") || ""), p.push(o), c = c.add(t('<li><div class="pi-pinch-zoom"><img src="' + o + '" alt="' + r + '"/></div></li>')), u = u.add(t("<li>" + (e + 1) + "</li>"))
        }), r.append(c), s.append(u), t("body").append(o), o.find(i.selector.total).text(l), this.$title = o.find(i.selector.title), this.$current = o.find(i.selector.current), this.$bar = o.find(i.selector.bar), this.$actions = o.find(i.selector.actions), this.$navItems = s.find("li"), this.$slides = r.find("li"), i.shareBtn && this.$actions.append('<a href="javascript:;" class="pi-share data-pi-toggle="share"></a>'), i.showDirection ? a.show() : a.hide(), r.find(i.selector.pinchZoom).each(function() {
            t(this).data("pinchzoom", new PinchZoom(t(this), {})), t(this).on("pz_doubletap", function(t) {})
        }), h.on("click.preview", function(t) {
            t.preventDefault();
            var n = h.index(this);
            i.weChatImagePreview && window.WeixinJSBridge ? window.WeixinJSBridge.invoke("imagePreview", {
                current: p[n],
                urls: p
            }) : e.open(n)
        }), o.find(".pi-preview-direction a").on("click.direction.preview", function(i) {
            i.preventDefault();
            var n = t(i.target).parent("li");
            n.is(".pi-preview-prev") ? e.prevSlide() : e.nextSlide()
        }), this.$navItems.on("click.nav.preview", function() {
            var i = e.$navItems.index(t(this));
            e.activate(e.$slides.eq(i))
        }), o.find(i.selector.close).on("click.close.preview", function(t) {
            t.preventDefault(), e.close()
        }), r.hammer().on("click.preview", function(t) {
            t.preventDefault(), e.toggleToolBar()
        }).on("swipeleft.preview", function(t) {
            t.preventDefault(), e.nextSlide()
        }).on("swiperight.preview", function(t) {
            t.preventDefault(), e.prevSlide()
        }), r.data("hammer").get("swipe").set({
            direction: Hammer.DIRECTION_HORIZONTAL,
            velocity: .35
        }), t(document).on("keydown.preview", t.proxy(function(t) {
            var e = t.keyCode;
            37 == e ? this.prevSlide() : 39 == e ? this.nextSlide() : 27 == e && this.close()
        }, this)))
    }, s.prototype.activate = function(e) {
        var n = this.options,
            o = this.$slides,
            s = o.index(e),
            a = e.find("img").attr("alt") || "",
            c = n.className.active;
        r(e.find("img"), function(e) {
            t(e).addClass("pi-img-loaded")
        }), o.find("." + c).is(e) || this.transitioning || (this.transitioning = 1, this.$title.text(a), this.$current.text(s + 1), o.removeClass(), e.addClass(c), o.eq(s - 1).addClass(n.className.prevSlide), o.eq(s + 1).addClass(n.className.nextSlide), this.$navItems.removeClass().eq(s).addClass(n.className.active), i.transition ? e.one(i.transition.end, t.proxy(function() {
            this.transitioning = 0
        }, this)).emulateTransitionEnd(300) : this.transitioning = 0)
    }, s.prototype.nextSlide = function() {
        if (1 !== this.$slides.length) {
            var t = this.$slides,
                e = t.filter(".pi-active"),
                n = t.index(e),
                o = "pi-animation-right-spring";
            n + 1 >= t.length ? i.animation && e.addClass(o).on(i.animation.end, function() {
                e.removeClass(o)
            }) : this.activate(t.eq(n + 1))
        }
    }, s.prototype.prevSlide = function() {
        if (1 !== this.$slides.length) {
            var t = this.$slides,
                e = t.filter(".pi-active"),
                n = this.$slides.index(e),
                o = "pi-animation-left-spring";
            0 === n ? i.animation && e.addClass(o).on(i.animation.end, function() {
                e.removeClass(o)
            }) : this.activate(t.eq(n - 1))
        }
    }, s.prototype.toggleToolBar = function() {
        this.$preview.toggleClass(this.options.className.barActive)
    }, s.prototype.open = function(t) {
        var e = t || 0;
        this.checkScrollbar(), this.setScrollbar(), this.activate(this.$slides.eq(e)), this.$preview.addClass(this.options.className.active), this.$body.addClass(this.options.className.activeBody)
    }, s.prototype.close = function() {
        function e() {
            this.$body.removeClass(n.className.activeBody), this.resetScrollbar()
        }
        var n = this.options;
        this.$preview.removeClass(n.className.active), this.$slides.removeClass(), i.transition.end ? this.$preview.one(i.transition.end, t.proxy(e, this)) : e.call(this)
    }, s.prototype.checkScrollbar = function() {
        this.scrollbarWidth = o()
    }, s.prototype.setScrollbar = function() {
        var t = parseInt(this.$body.css("padding-right") || 0, 10);
        this.scrollbarWidth && this.$body.css("padding-right", t + this.scrollbarWidth)
    }, s.prototype.resetScrollbar = function() {
        this.$body.css("padding-right", "")
    }, t.fn.preview = e, s
});